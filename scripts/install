#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies... This might take some time." --weight=3

ynh_install_nodejs --nodejs_version="$NODEJS_VERSION"

# Install npm-check-updates to manage dependency updates
npm install -g npm-check-updates

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=3

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

# Configure redis
redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app="$app" --key=redis_db --value="$redis_db"

ynh_add_config --template="default.yml" --destination="$install_dir/.config/default.yml"
chmod 400 "$install_dir/.config/default.yml"
chown "$app:$app" "$install_dir/.config/default.yml"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app... This will take some time." --weight=15

pushd "$install_dir"
	curl https://sh.rustup.rs -sSf | ynh_exec_warn_less ynh_exec_as $app sh -s -- -y
	export PATH="$install_dir/.cargo/bin:$PATH"	
	ynh_use_nodejs
	env $ynh_node_load_PATH corepack enable
	env $ynh_node_load_PATH COREPACK_ENABLE_DOWNLOAD_PROMPT=0 corepack prepare pnpm@latest --activate
	
	# Update all dependencies to the latest compatible versions
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH ncu -u
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH pnpm install
	
	# Build the application
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH NODE_ENV=production pnpm build
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH NODE_ENV=production ANTENNA_MIGRATION_SKIP=false ANTENNA_MIGRATION_COPY_LIMIT=0 ANTENNA_MIGRATION_READ_LIMIT=1000 pnpm run migrate
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

env_path="$PATH"
# Create a dedicated systemd config
ynh_add_systemd_config
yunohost service add "$app" --description="A interplanetary blogging platform" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name="$app" --action="start" --log_path=systemd --line_match="All workers started"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"